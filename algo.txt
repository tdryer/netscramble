 https://projects.kde.org/projects/kde/kdegames/knetwalk/repository/revisions/master/entry/src/abstractgrid.cpp#L201
 http://code.google.com/p/jnetwalk/source/browse/trunk/src/eu/easyedu/jnetwalk/Board.java#96
 
 create grid
 
    set random cell to the origin

    occupied_cells = 0
    min_occupied_cells = # cells in grid * 4/5

    while occupied_cells < min_occupied cells:
        
        list = [origin_pos]
        if 50/50 random chance:
            add_random_cable(list)
        
        while list is not empty:
            if 50/50 random change:
                add_random_cable(list)
                if 50/50 random change:
                    add_random_cable(list)
                list.remove(0)
            else:
                list.append(list[0])
                list.remove(0)
        
        set occupied_cells to number of cells with cables
 
 
 add_random_cable(list):
    
    cell = list[0]
    free_cells = adjacent free cells to cell
    if free_cells = []:
        return
    free_cell = random item from free_cells
    add connection from cell to free_cell and vise versa
    list.append(free_cell)

* everything with single connection becomes node?
loops are prevented by never connecting a cable to another cable
